<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-16T20:00:46Z" name="All Test Suite" finished-at="2021-05-16T20:00:47Z" duration-ms="1610">
    <groups>
    </groups>
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="39">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@6e75aa0d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7fc229ab]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4387b79e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4f638935]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1060b431]" started-at="2021-05-16T20:00:46Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="7">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-16T20:00:46Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-16T20:00:46Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Searchfrec: 1curPos: 100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6973bf95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1fe20588]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@77167fb7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@78ac1102]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6ce139a4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="18">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@778d1062]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2b6faea6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4313f5bc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@670002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7f010382]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1e802ef9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0 freq: 8 Positions: []]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 20 freq: 0 Positions: []]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0 freq: 0 Positions: [100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@161479c6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testSort" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@150c158]" started-at="2021-05-16T20:00:46Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-16T20:00:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [10, 100, 320, 400]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="18">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@76908cc0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@be64738]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@35047d03]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[docId: 1 freq: 4 Positions: [1, 2, 3, 4], docId: 1 freq: 4 Positions: [2, 4, 3, 1], docId: 2 freq: 2 Positions: [5, 6]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2473d930]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49b0b76]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@769f71a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5ae50ce6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6f96c77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 2 freq: 4 Positions: [5, 9, 7, 8] docId: 3 freq: 2 Positions: [10, 11] docId: 4 freq: 4 Positions: [1, 4, 3, 2] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@4c9f8c13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-16T20:00:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1 freq: 4 Positions: [1, 2, 3, 4] docId: 2 freq: 2 Positions: [5, 6] ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="7">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: C:/2.txttuples: []]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 2docPath: nulltuples: []]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaafrec: 1curPos: 17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbbfrec: 1curPos: 30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaafrec: 1curPos: 17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@34b7ac2f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: [aaafrec: 1curPos: 17, bbbfrec: 1curPos: 30]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@319b92f3]" started-at="2021-05-16T20:00:46Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1docPath: C:/1.txttuples: []]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="44">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T20:00:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@9225652]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 0, bbbfrec: 1curPos: 1, cccfrec: 1curPos: 2, dddfrec: 1curPos: 3, isfrec: 1curPos: 4, f17frec: 1curPos: 5, 2020frec: 1curPos: 6, abfrec: 1curPos: 7, abababababababababababfrec: 1curPos: 8]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@5d11346a]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@654f0d9c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="33">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@30ee2816]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 0, bbbfrec: 1curPos: 1, cccfrec: 1curPos: 2, dddfrec: 1curPos: 3, f17frec: 1curPos: 4, 2020frec: 1curPos: 5, abfrec: 1curPos: 6, abababababababababababfrec: 1curPos: 7]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@635eaaf1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@6dde5c8c]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@31d7b7bf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 0, bbbfrec: 1curPos: 1, cccfrec: 1curPos: 3, dddfrec: 1curPos: 4, f17frec: 1curPos: 6, 2020frec: 1curPos: 7, abfrec: 1curPos: 8, abababababababababababfrec: 1curPos: 10]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="16">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@3f197a46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 0, bbbfrec: 1curPos: 2, abfrec: 1curPos: 3, cccfrec: 1curPos: 4, dddfrec: 1curPos: 5, abababababababababababfrec: 1curPos: 7]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1f021e6c]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@636be97c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="18">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@1725dc0f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 0, bbbfrec: 1curPos: 1, cccfrec: 1curPos: 3, dddfrec: 1curPos: 4, f17frec: 1curPos: 5, 2020frec: 1curPos: 6]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@16022d9d]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@3911c2a7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-16T20:00:46Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@3d74bf60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaafrec: 1curPos: 1, bbbfrec: 1curPos: 2, cccfrec: 1curPos: 4, dddfrec: 1curPos: 6]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4b53f538]" started-at="2021-05-16T20:00:46Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T20:00:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@4f209819]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-16T20:00:46Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-16T20:00:47Z" duration-ms="696">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, becausefrec: 1curPos: 5, hencefrec: 1curPos: 6, capitalfrec: 1curPos: 7, ifrec: 1curPos: 8, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, 26%frec: 1curPos: 3, u571frec: 1curPos: 4, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, hahahahahahahahahahahahahfrec: 1curPos: 12, hafrec: 1curPos: 13, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6483f5ae]" started-at="2021-05-16T20:00:47Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0docPath: E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-16T20:00:47Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-16T20:00:47Z" duration-ms="337">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d64e326]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@2d96543c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 1docPath: D:\IdeaWorkspace\SeachEngine/text/2.txttuples: [activityfrec: 1curPos: 0, destinationfrec: 1curPos: 1, emergencyfrec: 1curPos: 2, capitalfrec: 1curPos: 7, frozenfrec: 1curPos: 9, benefitsfrec: 1curPos: 10, googlefrec: 1curPos: 11, frozenfrec: 1curPos: 14, googlefrec: 1curPos: 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testSave" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E:/JAVA_LAB/Experiment1TestV2-4win/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [6, 0, 1] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [7, 2] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [9, 4] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1d7acb34]" started-at="2021-05-16T20:00:47Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@73a2e526]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-16T20:00:47Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-16T20:00:47Z" duration-ms="31">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@7f416310]" started-at="2021-05-16T20:00:47Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indexes: 
{
0: E:\JAVA_LAB\Experiment1TestV2-4win\Experiment1Test\test\text\1.txt
1: E:\JAVA_LAB\Experiment1TestV2-4win\Experiment1Test\test\text\2.txt
2: E:\JAVA_LAB\Experiment1TestV2-4win\Experiment1Test\test\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Indexes: 
{
0: D:\IdeaWorkspace\SeachEngine\text\1.txt
1: D:\IdeaWorkspace\SeachEngine\text\2.txt
2: D:\IdeaWorkspace\SeachEngine\text\3.txt
}

Following are Inverted Indexes: 
activity: {
docId: 0 freq: 3 Positions: [0, 1, 6] docId: 1 freq: 1 Positions: [0] 
}
benefits: {
docId: 0 freq: 2 Positions: [2, 7] docId: 1 freq: 1 Positions: [10] 
}
capital: {
docId: 0 freq: 2 Positions: [3, 8] docId: 1 freq: 1 Positions: [7] 
}
destination: {
docId: 0 freq: 2 Positions: [4, 9] docId: 1 freq: 1 Positions: [1] 
}
emergency: {
docId: 0 freq: 1 Positions: [10] docId: 1 freq: 1 Positions: [2] 
}
fizzy: {
docId: 0 freq: 1 Positions: [5] 
}
frozen: {
docId: 1 freq: 2 Positions: [9, 14] 
}
google: {
docId: 1 freq: 2 Positions: [11, 15] 
}
marketplace: {
docId: 2 freq: 1 Positions: [0] 
}
medical: {
docId: 2 freq: 1 Positions: [1] 
}
notification: {
docId: 2 freq: 1 Positions: [3] 
}
peninsula: {
docId: 2 freq: 1 Positions: [5] 
}
pollution: {
docId: 2 freq: 1 Positions: [7] 
}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-16T20:00:47Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-16T20:00:47Z" duration-ms="67">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:new content1
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:new content2
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:-1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:-3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:1 DocPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
Content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score:1.0
{activity=docId: 1 freq: 1 Positions: [0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit!
DocId:0 DocPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
Content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score:3.0
{activity=docId: 0 freq: 3 Positions: [0, 1, 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1d470d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@76b10754]" started-at="2021-05-16T20:00:47Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@31000e60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-16T20:00:47Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-16T20:00:47Z" duration-ms="84">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@481a15ff]" started-at="2021-05-16T20:00:46Z" name="beforeSuite" finished-at="2021-05-16T20:00:46Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-16T20:00:47Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T20:00:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.impl.Hit;@6aecbb8d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@1af146]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-16T20:00:47Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.impl.Hit;@4da602fc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2a8d39c4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@74294adb]" started-at="2021-05-16T20:00:47Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T20:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@25b2cfcb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@72758afa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
